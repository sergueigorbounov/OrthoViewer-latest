# GitLab CI configuration using conda instead of pip
variables:
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: "/certs"
  ROCKY_HOST: "10.0.0.213"
  ROCKY_USER: "rocky"
  PROJECT_DIR: "/home/rocky/orthoviewer"

stages:
  - test
  - build
  - deploy

# Backend tests using conda
test_backend:
  stage: test
  image: condaforge/mambaforge:latest
  before_script:
    - conda env create -f environment.yml
    - source activate orthoviewer2
  script:
    - cd backend
    - export PYTHONPATH="${PYTHONPATH}:$(pwd)"
    - conda run -n orthoviewer2 pytest tests/ --cov=app --cov-report=xml
  coverage: '/(?i)total.*? (100(?:\.0+)?\%|[1-9]?\d(?:\.\d+)?\%)$/'
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: backend/coverage.xml

# Build Docker images
build:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  script:
    - docker build -t $CI_REGISTRY_IMAGE/backend:$CI_COMMIT_SHA ./backend
    - docker build -t $CI_REGISTRY_IMAGE/frontend:$CI_COMMIT_SHA ./frontend-vite
  only:
    - main
    - develop

# Deploy to Rocky VM - Simplified for debugging
deploy_rocky:
  stage: deploy
  image: alpine:latest
  before_script:
    - apk add --no-cache openssh-client tar
    - eval $(ssh-agent -s)
    - echo "$ROCKY_SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan -H $ROCKY_HOST >> ~/.ssh/known_hosts
  script:
    - echo "Deploying OrthoViewer to Rocky VM"
    - echo "Testing SSH connection"
    - ssh -o ConnectTimeout=10 $ROCKY_USER@$ROCKY_HOST "whoami"
    - echo "Creating deployment package"
    - tar -czf deploy.tar.gz --exclude='.git' --exclude='node_modules' --exclude='__pycache__' .
    - echo "Uploading package"
    - scp deploy.tar.gz $ROCKY_USER@$ROCKY_HOST:~/
    - echo "Deploying on remote"
    - ssh $ROCKY_USER@$ROCKY_HOST "mkdir -p $PROJECT_DIR && cd $PROJECT_DIR && tar -xzf ~/deploy.tar.gz && docker compose -f docker-compose.rocky.yml up -d"
    - echo "Deployment complete"
  only:
    - feat/GNP-6697-rocky-deployment

# Health check job (manual trigger)
health_check:
  stage: deploy
  image: alpine:latest
  before_script:
    - apk add --no-cache openssh-client curl
    - eval $(ssh-agent -s)
    - echo "$ROCKY_SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan -H $ROCKY_HOST >> ~/.ssh/known_hosts
  script:
    - echo "Checking Rocky deployment health"
    - ssh $ROCKY_USER@$ROCKY_HOST "cd $PROJECT_DIR && docker-compose -f docker-compose.rocky.yml ps"
    - ssh $ROCKY_USER@$ROCKY_HOST "curl -f http://localhost:8080"
    - echo "Health check complete"
  only:
    - feat/GNP-6697-rocky-deployment
  when: manual
