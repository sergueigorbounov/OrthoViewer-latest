name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  backend-tests:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Conda
      uses: conda-incubator/setup-miniconda@v2
      with:
        miniforge-variant: Mambaforge
        miniforge-version: latest
        activate-environment: orthoviewer2
        use-mamba: true
        environment-file: backend/environment.yml
        auto-activate-base: false
        
    - name: Verify conda environment
      shell: bash -l {0}
      run: |
        conda info
        conda list
        which python
        python --version
        
    - name: Run unit tests
      shell: bash -l {0}
      run: |
        cd backend
        python -m pytest tests/unit -v --cov=app --cov-report=term --cov-report=xml
        
    - name: Run integration tests
      shell: bash -l {0}
      run: |
        cd backend
        python -m pytest tests/integration -v
        
    - name: Run performance tests
      shell: bash -l {0}
      run: |
        cd backend
        python -m pytest tests/performance -v
        
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./backend/coverage.xml
        fail_ci_if_error: false

  frontend-tests:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        
    - name: Install dependencies
      run: |
        cd frontend-vite
        npm ci
        
    - name: Run ESLint
      run: |
        cd frontend-vite
        npm run lint
        
    - name: Run frontend tests
      run: |
        cd frontend-vite
        npm test -- --coverage
      
  docker-build:
    runs-on: ubuntu-latest
    needs: [backend-tests, frontend-tests]
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      
    - name: Build and test Docker images
      run: |
        docker-compose build
        docker-compose up -d
        sleep 15  # Wait for services to start
        python end_to_end_tests.py
        docker-compose down